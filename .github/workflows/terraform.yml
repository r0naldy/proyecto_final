# .github/workflows/terraform.yml
name: Terraform Apply

on:
  push:
    branches:
      - main # O la rama que uses para tu código de infraestructura
    paths:
      - 'terraform/**' # Activa el workflow cuando hay cambios en la carpeta terraform

env:
  AWS_REGION: us-east-1 # Asegúrate de que esta región coincide con tus tfvars
  S3_BUCKET_NAME: x-bucket-inicial # Asegúrate de que esta variable coincide con tus tfvars

jobs:
  terraform:
    name: 'Terraform Apply'
    runs-on: ubuntu-latest
    environment: production # Puedes usar un entorno de GitHub para gestionar secretos

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.0 # Usa una versión específica

      # --- Pasos de depuración añadidos ---
      - name: Debug: List Terraform directory contents
        run: ls -l terraform/

      - name: Debug: Display terraform.tfvars content (Sensitive: Public Key)
        run: cat terraform/terraform.tfvars
      # --- Fin de Pasos de depuración ---

      - name: Terraform Init
        id: init
        run: terraform -chdir=terraform init

      - name: Terraform Validate
        id: validate
        run: terraform -chdir=terraform validate

      - name: Terraform Plan
        id: plan
        run: terraform -chdir=terraform plan -out=tfplan

      - name: Terraform Apply
        id: apply
        run: terraform -chdir=terraform apply -auto-approve tfplan
